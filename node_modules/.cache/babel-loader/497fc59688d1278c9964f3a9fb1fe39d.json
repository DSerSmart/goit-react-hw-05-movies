{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghbgf\\\\Downloads\\\\GoIt\\\\goit-react-hw-05-movies\\\\src\\\\page\\\\Movie\\\\Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from 'service/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Container } from './Movie.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  var _searchParams$get;\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const q = (_searchParams$get = searchParams.get('query')) !== null && _searchParams$get !== void 0 ? _searchParams$get : '';\n  const [moviesCollection, setmoviesCollection] = useState([]);\n  useEffect(() => {\n    if (q) {\n      getSearchMovies(q).then(data => setmoviesCollection(data.results));\n    }\n  }, [q]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? {\n      query\n    } : {};\n    setSearchParams(nextParams);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onSubmit: q => updateQueryString(q)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      collection: moviesCollection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"11vHjPQbMmF6zyIfuVAaRmOzcQ8=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/ghbgf/Downloads/GoIt/goit-react-hw-05-movies/src/page/Movie/Movie.jsx"],"names":["Searchbar","Outlet","useSearchParams","useState","useEffect","getSearchMovies","MovieList","Container","Movie","searchParams","setSearchParams","q","get","moviesCollection","setmoviesCollection","then","data","results","updateQueryString","query","nextParams"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,gCAA1B;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,kBAAxC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,eAAe,EAAvD;AACA,QAAMS,CAAC,wBAAGF,YAAY,CAACG,GAAb,CAAiB,OAAjB,CAAH,iEAAgC,EAAvC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,CAAJ,EAAO;AACLN,MAAAA,eAAe,CAACM,CAAD,CAAf,CAAmBI,IAAnB,CAAwBC,IAAI,IAAIF,mBAAmB,CAACE,IAAI,CAACC,OAAN,CAAnD;AACD;AACF,GAJQ,EAIN,CAACN,CAAD,CAJM,CAAT;;AAMA,QAAMO,iBAAiB,GAAGC,KAAK,IAAI;AACjC,UAAMC,UAAU,GAAGD,KAAK,KAAK,EAAV,GAAe;AAAEA,MAAAA;AAAF,KAAf,GAA2B,EAA9C;AACAT,IAAAA,eAAe,CAACU,UAAD,CAAf;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAET,CAAC,IAAIO,iBAAiB,CAACP,CAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBD;;GAAML,K;UACoCN,e;;;KADpCM,K;AAwBN,eAAeA,KAAf","sourcesContent":["import { Searchbar } from 'components/SearchBar/SearchBar';\r\nimport { Outlet, useSearchParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { getSearchMovies } from 'service/Api';\r\nimport { MovieList } from 'components/MovieList/MovieList';\r\nimport { Container } from './Movie.styled';\r\n\r\nconst Movie = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const q = searchParams.get('query') ?? '';\r\n  const [moviesCollection, setmoviesCollection] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (q) {\r\n      getSearchMovies(q).then(data => setmoviesCollection(data.results));\r\n    }\r\n  }, [q]);\r\n\r\n  const updateQueryString = query => {\r\n    const nextParams = query !== '' ? { query } : {};\r\n    setSearchParams(nextParams);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Searchbar onSubmit={q => updateQueryString(q)} />\r\n      <MovieList collection={moviesCollection} />\r\n      <Outlet />\r\n    </Container>\r\n  );\r\n};\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}